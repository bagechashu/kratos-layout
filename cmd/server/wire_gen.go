// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/bagechashu/kratos-layout/app/greeter"
	"github.com/bagechashu/kratos-layout/conf"
	"github.com/bagechashu/kratos-layout/server"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, data *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	greeterData, cleanup, err := greeter.NewData(data, logger)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := greeter.NewGreeterRepo(greeterData, logger)
	greeterUsecase := greeter.NewGreeterUsecase(greeterRepo, logger)
	greeterService := greeter.NewGreeterService(greeterUsecase, logger)
	httpServer := server.NewHTTPServer(confServer, greeterService, logger)
	grpcServer := server.NewGRPCServer(confServer, greeterService, logger)
	app := newApp(logger, httpServer, grpcServer)
	return app, func() {
		cleanup()
	}, nil
}
